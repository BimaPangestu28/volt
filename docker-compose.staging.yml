version: '3.8'

services:
  backend:
    image: bimapangestu/volt-backend:develop
    environment:
      - MONGO_URI=mongodb://mongo:27017/volt_staging
      - REDIS_URI=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - PORT=8080
      - CORS_ORIGIN=https://staging.volt.yourdomain.com
      - WS_ORIGIN=wss://staging-api.yourdomain.com
      - GIN_MODE=debug
    networks:
      - volt-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    depends_on:
      - mongo
      - redis

  frontend:
    image: bimapangestu/volt-frontend:develop
    environment:
      - VITE_API_URL=https://staging-api.yourdomain.com
      - VITE_WS_URL=wss://staging-api.yourdomain.com
      - VITE_APP_NAME=Volt (Staging)
      - VITE_BRAND_COLOR=#2563EB
    networks:
      - volt-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  mongo:
    image: mongo:7
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE=volt_staging
    volumes:
      - mongo_staging_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - volt-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_staging_data:/data
    networks:
      - volt-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  # Nginx reverse proxy for staging
  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx/nginx.staging.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/ssl/certs:ro
    networks:
      - volt-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
    depends_on:
      - backend
      - frontend

volumes:
  mongo_staging_data:
    driver: local
  redis_staging_data:
    driver: local

networks:
  volt-network:
    driver: overlay
    attachable: true