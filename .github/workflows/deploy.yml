name: Build and Deploy Volt

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  REGISTRY: docker.io
  BACKEND_IMAGE: bimapangestu/volt-backend
  FRONTEND_IMAGE: bimapangestu/volt-frontend

jobs:
  # Build and push images
  build:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    outputs:
      image_tag: ${{ steps.tag.outputs.IMAGE_TAG }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set image tag
        id: tag
        run: |
          # Always use commit hash for better tracking
          SHORT_SHA=${GITHUB_SHA::8}
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          
          if [[ $GITHUB_REF == refs/heads/main ]]; then
            echo "IMAGE_TAG=${TIMESTAMP}-${SHORT_SHA}" >> $GITHUB_OUTPUT
            echo "ENV=production" >> $GITHUB_OUTPUT
          elif [[ $GITHUB_REF == refs/heads/develop ]]; then
            echo "IMAGE_TAG=dev-${TIMESTAMP}-${SHORT_SHA}" >> $GITHUB_OUTPUT
            echo "ENV=staging" >> $GITHUB_OUTPUT
          else
            echo "IMAGE_TAG=pr-${SHORT_SHA}" >> $GITHUB_OUTPUT
            echo "ENV=test" >> $GITHUB_OUTPUT
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build Backend
      - name: Build and push backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ env.BACKEND_IMAGE }}:${{ steps.tag.outputs.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Build Frontend
      - name: Build and push frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ env.FRONTEND_IMAGE }}:${{ steps.tag.outputs.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Deploy using SSH with password  
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
      - name: Get build info
        id: build-info
        run: |
          echo "IMAGE_TAG=${{ needs.build.outputs.image_tag }}" >> $GITHUB_OUTPUT
      
      - name: Deploy to production server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT || 22 }}
          script: |
            echo "üöÄ Deploying Volt with version: ${{ steps.build-info.outputs.IMAGE_TAG }}"
            
            cd /root/volt
            
            # Update docker-compose with new image tags
            sed -i "s|bimapangestu/volt-backend:.*|bimapangestu/volt-backend:${{ steps.build-info.outputs.IMAGE_TAG }}|g" docker-compose.prod.yml
            sed -i "s|bimapangestu/volt-frontend:.*|bimapangestu/volt-frontend:${{ steps.build-info.outputs.IMAGE_TAG }}|g" docker-compose.prod.yml
            
            # Remove old stack
            docker stack rm volt || true
            sleep 10
            
            # Pull new images
            docker pull bimapangestu/volt-backend:${{ steps.build-info.outputs.IMAGE_TAG }}
            docker pull bimapangestu/volt-frontend:${{ steps.build-info.outputs.IMAGE_TAG }}
            
            # Deploy new stack
            docker stack deploy -c docker-compose.prod.yml volt
            
            # Cleanup old images (keep last 3 versions)
            docker images bimapangestu/volt-backend --format "table {{.Tag}}" | tail -n +4 | xargs -r docker rmi bimapangestu/volt-backend: || true
            docker images bimapangestu/volt-frontend --format "table {{.Tag}}" | tail -n +4 | xargs -r docker rmi bimapangestu/volt-frontend: || true
            
            echo "‚úÖ Deployment completed with version: ${{ steps.build-info.outputs.IMAGE_TAG }}"

      - name: Notify deployment success
        if: success()
        run: |
          echo "üéâ Production deployment successful!"
          # Add notification here if needed

      - name: Notify deployment failure
        if: failure()
        run: |
          echo "‚ùå Production deployment failed!"
          # Add failure notification here if needed

  # Test deployment (PR only)
  test:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Run backend tests
        working-directory: ./backend
        run: |
          go mod download
          go test ./... -v

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Test frontend build
        working-directory: ./frontend
        run: |
          npm ci
          npm run check
          npm run build